[% major_ver = "1.19.3"; version = major_ver _ ".1" -%]
<!---
    @title         OpenResty [% version %] Released
--->

We are happy to announce the new formal release, [% version %], of the
OpenResty web platform based on NGINX and LuaJIT.

[Download this version here](download.html).

The (portable) source code distribution, the Win32/Win64 binary
distributions, and the pre-built binary Linux packages for Ubuntu,
Debian, Fedora, CentOS, RHEL, Alpine, Amazon Linux are provided on this
[Download page](download.html).

# Version Highlights

A brife overview of the most noteable changes:

* upgraded the nginx core to 1.19.3.
* upgraded LuaJIT to 2.1-20201008, imported many changes from the upstream branch that maintained by Mike Pall.
* optimize: post zombie thread: avoided the linear search.
* feature: now we recycle lua thread GC objects for our "light threads".
* optimize: now we make use of the new lua_getexdata2 and lua_setexdata2 to
  attach coctx to the Lua thread objects directly which save the lookup overhead
  which can become the bottleneck when there are many Lua light threads around
  in a single request handler.
* optimize: avoided use of `lua_tolstring` in `ngx_http_lua_calc_strlen_in_table`
  and other APIs which may result in the creation of unnecessary gc objects.
* feature: shared `ngx.ctx` among SSL_* phases and the following phases.
* feature: added `exit_worker_by*` to run Lua code upon nginx worker process exit.
* feature: added the `recreate_request()` function in the `ngx.balancer` module,
  which allows user to recreate request buffer in balancer phase.
* feature: supported receiveany on `ngx.req.socket(true?)` socks.
* feature: implemented the new `server_port()` API the `ngx.ssl` module to get
  server port.
* feature: support detecting SSE4.2 dynamically.

# Full Change logs

Complete change logs since the last (formal) release, [1.17.8.2](ann-1017008002.html), can be browsed
in the page [Change Log for [% major_ver %].x](changelog-1019003.html).

# Testing

We have run extensive testing on our Amazon EC2 test cluster and
ensured that all the components (including the Nginx core) play well
together. The latest test report can always be found here:

https://qa.openresty.org/

We also always run our OpenResty Edge commercial software based on the
latest open source version of OpenResty in our own global CDN network
(dubbed "mini CDN") powering our openresty.org and openresty.com
websites. See https://openresty.com/ for more details.

# Community Support

See the [Community Page](community.html).

# Commercial Support

Commercial technical support and real-time noninvasive online monitoring and profiling
solution is provided through the official [OpenResty XRay](https://openresty.com/en/xray/)
product.

# Feedback

Feedback on this release is more than welcome. Feel free to create new
[GitHub issues](https://github.com/openresty/openresty/issues) or send emails to one of our [mailing lists](community.html).
